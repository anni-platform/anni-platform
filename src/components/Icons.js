import React from "react";
import PropTypes from "prop-types";

export const Icons = props => {
  const { name, size } = props;
  let pathArray;
  let polylinePoints;
  let transform;

  // Extract svg paths per icon into an array and provide a unique name
  switch (name) {
    case "add":
      pathArray = ["M24.5 8L24.5 40M8 24.5L40 24.5"];
      break;

    case "arrow-back":
      pathArray = ["M22 8 8 24 22 40", "M8,24 L40,24"];
      break;

    case "audio":
      pathArray = [
        "M24,4 C21.2710636,4 19.0588235,6.31548236 19.0588235,9.17177459 L19.0588235,22.9631735 C19.0588235,25.8194657 21.2710636,28.1349481 24,28.1349481 C26.7289364,28.1349481 28.9411765,25.8194657 28.9411765,22.9631735 L28.9411765,9.17177459 C28.9411765,6.31548236 26.7289364,4 24,4 L24,4 Z",
        "M36 19.2249135L36 22.6727632C35.9999999 29.337445 30.6274169 34.7402371 24 34.7402371 17.3725831 34.7402371 12.0000001 29.337445 12 22.6727632L12 19.2249135M24 35.83391L24 41.5531389M16.4470588 42.5294118L31.0689076 42.5294118"
      ];
      break;

    case "cancel":
      pathArray = ["M9 9L39.7461162 39.7461162M39.7461162 9L9 39.7461162"];
      break;

    case "confirm":
      polylinePoints = ["44 12 17.286 36 4 21.818"];
      break;

    case "delete":
      pathArray = [
        "M8,12.8 L11.5555556,12.8 L40,12.8 L8,12.8 Z M36.4444444,12.8 L36.5,40 L11.5,40 L11.5555556,12.8 L36.4444444,12.8 Z M16.5,12.8 L16.5,8 L30.7222222,8 L30.7222222,12.8 L16.5,12.8 Z"
      ];
      break;

    case "logo":
      pathArray = [
        "M4.84502033,26.511738 C4.62705793,26.511738 4.45,26.3231855 4.45,26.091073 L4.45,19.020665 C4.45,18.7885525 4.62705793,18.6 4.84502033,18.6 L6.35497967,18.6 C6.57294207,18.6 6.75,18.7885525 6.75,19.020665 L6.75,26.091073 C6.75,26.3231855 6.57294207,26.511738 6.35497967,26.511738 L4.84502033,26.511738 Z M43.1549797,26.511738 L41.6450203,26.511738 C41.4270579,26.511738 41.25,26.3238078 41.25,26.091073 L41.25,19.020665 C41.25,18.7885525 41.4270579,18.6 41.6450203,18.6 L43.1549797,18.6 C43.3729421,18.6 43.55,18.7885525 43.55,19.020665 L43.55,26.091073 C43.55,26.3238078 43.3729421,26.511738 43.1549797,26.511738 Z",
        "M23.9997506,34.125 C14.506386,34.125 6.75,29.5566204 6.75,28.8869346 L6.75,15.2137232 C6.75,14.5433796 7.30888821,14 7.99919984,14 L40.0008002,14 C40.6911118,14 41.25,14.5433796 41.25,15.2137232 L41.25,28.8869346 C41.25,29.5566204 33.4931152,34.125 23.9997506,34.125 Z",
        "M12.7875,23.775 C12.3111544,23.775 11.925,23.3888456 11.925,22.9125 C11.925,22.4361544 12.3111544,22.05 12.7875,22.05 C13.2638456,22.05 13.65,22.4361544 13.65,22.9125 C13.65,23.3888456 13.2638456,23.775 12.7875,23.775 Z M35.2125,23.775 C34.7361544,23.775 34.35,23.3888456 34.35,22.9125 C34.35,22.4361544 34.7361544,22.05 35.2125,22.05 C35.6888456,22.05 36.075,22.4361544 36.075,22.9125 C36.075,23.3888456 35.6888456,23.775 35.2125,23.775 Z",
        "M4.45,21.292 L5.3,22.142 C5.3,22.611442 4.91944204,22.992 4.45,22.992 L1,22.992 C0.530557963,22.992 0.15,22.611442 0.15,22.142 C0.15,21.672558 0.530557963,21.292 1,21.292 L4.45,21.292 Z M43.55,22.992 L42.7,22.142 C42.7,21.672558 43.080558,21.292 43.55,21.292 L47,21.292 C47.469442,21.292 47.85,21.672558 47.85,22.142 C47.85,22.611442 47.469442,22.992 47,22.992 L43.55,22.992 Z"
      ];
      break;

    case "more":
      pathArray = [
        "M24,46 C36.1502645,46 46,36.1502645 46,24 C46,16.8626984 42.6012345,10.519221 37.3338966,6.49976102 C33.6343235,3.67664873 29.0129629,2 24,2 C11.8497355,2 2,11.8497355 2,24 C2,36.1502645 11.8497355,46 24,46 Z",
        "M16 24 21 24 29 24 32 24",
        "M24 16 24 20 24 27 24 32"
      ];
      break;

    case "notification":
      pathArray = [
        "M15.0509936,27.4087798 C14.8920962,27.6524173 15.1306021,27.9590316 15.4077933,27.8671109 L21.0206746,26.7481595 C21.2617382,26.6680072 21.4912921,26.8960596 21.4113638,27.1361984 L16.8864659,43.5941348 C16.7732875,43.9338278 17.2362319,44.1590176 17.4363722,43.8616271 L32.9466086,19.5404969 C33.1087031,19.2990858 32.8756323,18.9892909 32.5971623,19.0764406 L27.4596942,19.3922788 C27.2295009,19.4641614 27.0088989,19.2577374 27.0674064,19.024596 L31.0666962,4.38344483 C31.1511005,4.04661439 30.6974277,3.85036851 30.5078379,4.14171571 L15.0509936,27.4087798 Z"
      ];
      break;

    case "popout":
      polylinePoints = ["29.333 8 40 8 40 18.667", "18.667 40 8 40 8 29.33"];
      pathArray = ["M40 8L27.5555556 20.4444444M8 40L20.4444444 27.5555556"];
      break;

    case "resize":
      pathArray = [
        "M17.333 10 30.667 10 30.667 27 30.667 38 17.333 38z",
        "M30.667 10 39.5 10 44 10 44 38 30.667 38z",
        "M4 10 17.333 10 17.333 38 4 38 4 20z"
      ];
      break;

    case "chevron-down":
      pathArray = [
        "M42.6606448,14.4776432 C43.4003502,13.6615634 43.1084602,13 42.0027084,13 L5.99729162,13 C4.89421792,13 4.60032334,13.6584163 5.34726871,14.4776432 L22.7116416,33.5223568 C23.4557175,34.3384366 24.6557075,34.3415837 25.3982655,33.5223568 L42.6606448,14.4776432 Z"
      ];
      break;

    case "share":
      pathArray = [
        "M27.1099686,38.2704941 C27.0992877,35.7746359 27.0779258,30.7829195 27.0779258,30.7829195 C16.6675172,30.7145825 5.63493776,37.4563169 4.71283499,37.863406 C3.79073221,38.270495 4.02716881,37.0001076 4.02716881,37.0001076 C4.02716881,37.0001076 12.7253557,19.3003088 27.1194508,16.4325496 C27.1194508,16.4325496 27.1194508,12.0625138 27.1194508,9.87749592 C27.1194508,9.11036941 28.2923193,8.69891055 28.8787535,9.26030763 C33.0313325,13.2355969 40.8850931,20.6552529 43.6303,23.2832563 C44.288071,23.9129445 43.9262099,24.4396997 43.6303,24.7220868 C41.1380509,27.1004429 35.9569757,32.0259277 35.9569757,32.0259277 L29.0254683,38.6615751 C28.3901291,39.2697959 27.1131293,39.0090752 27.1099686,38.2704941 Z"
      ];
      break;

    case "video":
      pathArray = [
        "M37.423 19.018 31 23.571 43.091 32.143 43.091 15z",
        "M5 12 19 12 30.909 12 30.909 36 5 36z"
      ];
      break;

    case "view":
      pathArray = [
        "M24,31.3705357 C27.8839246,31.3705357 31.0324675,28.2944921 31.0324675,24.5 C31.0324675,22.6427777 30.2781919,20.9576694 29.0525953,19.7211144 C27.7741748,18.4312631 25.9829294,17.6294643 24,17.6294643 C20.1160754,17.6294643 16.9675325,20.7055079 16.9675325,24.5 C16.9675325,28.2944921 20.1160754,31.3705357 24,31.3705357 Z",
        "M5,24.5 C5,24.5 11.9090909,11 24,11 C28.9864091,11 33.091485,13.2961046 36.1940712,15.9944418 C40.6145515,19.8389593 43,24.5 43,24.5 C43,24.5 36.0909091,38 24,38 C11.9090909,38 5,24.5 5,24.5 Z"
      ];
      break;

    case "play":
      pathArray = [
        "M11.5407576,6.99048702 L36.6915001,23.1588215 C37.1560702,23.4574737 37.2905732,24.0761875 36.991921,24.5407576 C36.914455,24.6612602 36.8120028,24.7637125 36.6915001,24.8411785 L11.5407576,41.009513 C11.0761875,41.3081651 10.4574737,41.1736621 10.1588215,40.7090921 C10.0551304,40.5477948 10,40.3600861 10,40.1683345 L10,7.8316655 C10,7.27938075 10.4477153,6.8316655 11,6.8316655 C11.1917516,6.8316655 11.3794603,6.88679588 11.5407576,6.99048702 Z"
      ];
      break;

    case "prev-frame":
      pathArray = [
        "M31 7.8316655L31 40.1683345C31 40.7206193 30.5522847 41.1683345 30 41.1683345 29.8082484 41.1683345 29.6205397 41.1132041 29.4592424 41.009513L4.30849985 24.8411785C3.84392981 24.5425263 3.7094268 23.9238125 4.00807897 23.4592424 4.08554496 23.3387398 4.1879972 23.2362875 4.30849985 23.1588215L29.4592424 6.99048702C29.9238125 6.69183485 30.5425263 6.82633786 30.8411785 7.29090791 30.9448696 7.45220524 31 7.63991388 31 7.8316655zM37 7L43 7C43.5522847 7 44 7.44771525 44 8L44 40C44 40.5522847 43.5522847 41 43 41L37 41C36.4477153 41 36 40.5522847 36 40L36 19.75 36 8C36 7.44771525 36.4477153 7 37 7z"
      ];
      break;

    case "next-frame":
      pathArray = [
        "M18.5570822 6.17223705L44.5618397 23.6165857C45.0204887 23.9242538 45.1428829 24.5454764 44.8352149 25.0041253 44.7582216 25.1189012 44.6582724 25.2164713 44.5416753 25.2906777L18.5369178 41.8409901C18.0709912 42.1375216 17.4528969 42.0001997 17.1563654 41.5342732 17.0542431 41.373813 17 41.1875565 17 40.9973555L17 7.0026944C17 6.45040965 17.4477153 6.0026944 18 6.0026944 18.1984012 6.0026944 18.3923185 6.06171126 18.5570822 6.17223705zM4 6L10 6C10.5522847 6 11 6.44771525 11 7L11 41C11 41.5522847 10.5522847 42 10 42L4 42C3.44771525 42 3 41.5522847 3 41L3 19.5 3 7C3 6.44771525 3.44771525 6 4 6z"
      ];
      break;

    case "todo":
      pathArray = [
        "M5.9540744,21.7046689 C7.16876303,20.4899803 9.13827493,20.4900928 10.3546728,21.7064907 L10.5429148,21.8947327 C11.7586096,23.1104274 11.7569536,25.0831141 10.5447366,26.2953311 C9.33004797,27.5100197 7.36053606,27.5099072 6.14413816,26.2935093 L5.95589621,26.1052673 C4.74020143,24.8895726 4.74185742,22.9168859 5.9540744,21.7046689 Z M5.9540744,32.5910856 C7.16876303,31.376397 9.13827493,31.3765095 10.3546728,32.5929074 L10.5429148,32.7811494 C11.7586096,33.9968442 11.7569536,35.9695309 10.5447366,37.1817478 C9.33004797,38.3964365 7.36053606,38.3963239 6.14413816,37.179926 L5.95589621,36.9916841 C4.74020143,35.7759893 4.74185742,33.8033026 5.9540744,32.5910856 Z M5.9540744,10.8182522 C7.16876303,9.60356354 9.13827493,9.60367606 10.3546728,10.820074 L10.5429148,11.0083159 C11.7586096,12.2240107 11.7569536,14.1966974 10.5447366,15.4089144 C9.33004797,16.623603 7.36053606,16.6234905 6.14413816,15.4070926 L5.95589621,15.2188506 C4.74020143,14.0031558 4.74185742,12.0304691 5.9540744,10.8182522 Z M14.7415822,21.8890759 C14.7415822,21.337078 15.1974681,20.8895952 15.7398878,20.8895952 L41.3350277,20.8895952 C41.8863767,20.8895952 42.3333333,21.3369805 42.3333333,21.8890759 L42.3333333,26.1109241 C42.3333333,26.662922 41.8774475,27.1104048 41.3350277,27.1104048 L15.7398878,27.1104048 C15.1885389,27.1104048 14.7415822,26.6630195 14.7415822,26.1109241 L14.7415822,21.8890759 Z M14.7415822,32.7754926 C14.7415822,32.2234947 15.1974681,31.776012 15.7398878,31.776012 L41.3350277,31.776012 C41.8863767,31.776012 42.3333333,32.2233972 42.3333333,32.7754926 L42.3333333,36.9973408 C42.3333333,37.5493388 41.8774475,37.9968215 41.3350277,37.9968215 L15.7398878,37.9968215 C15.1885389,37.9968215 14.7415822,37.5494362 14.7415822,36.9973408 L14.7415822,32.7754926 Z M14.7415822,11.0026592 C14.7415822,10.4506612 15.1974681,10.0031785 15.7398878,10.0031785 L41.3350277,10.0031785 C41.8863767,10.0031785 42.3333333,10.4505638 42.3333333,11.0026592 L42.3333333,15.2245074 C42.3333333,15.7765053 41.8774475,16.223988 41.3350277,16.223988 L15.7398878,16.223988 C15.1885389,16.223988 14.7415822,15.7766028 14.7415822,15.2245074 L14.7415822,11.0026592 Z"
      ];
      break;

    case "pause":
      pathArray = [
        "M14 7L20 7C20.5522847 7 21 7.44771525 21 8L21 40C21 40.5522847 20.5522847 41 20 41L14 41C13.4477153 41 13 40.5522847 13 40L13 19.75 13 8C13 7.44771525 13.4477153 7 14 7zM28 7L34 7C34.5522847 7 35 7.44771525 35 8L35 40C35 40.5522847 34.5522847 41 34 41L28 41C27.4477153 41 27 40.5522847 27 40L27 19.75 27 8C27 7.44771525 27.4477153 7 28 7z"
      ];
      break;

    case "sound":
      pathArray = [
        "M1,19 L9.5,19 L24.4631245,9.47801168 C24.9290659,9.18150353 25.5471533,9.3188563 25.8436615,9.78479767 C25.9457666,9.94524861 26,10.1314891 26,10.3216732 L26,39.1744918 C26,39.7267765 25.5522847,40.1744918 25,40.1744918 C24.8092128,40.1744918 24.6224072,40.1199141 24.4616293,40.0171999 L9.5,30.4588465 L1,30.4588465 C0.44771525,30.4588465 7.61715194e-15,30.0111312 7.54951657e-15,29.4588465 L0,20 C-6.76353751e-17,19.4477153 0.44771525,19 1,19 Z",
        "M31.3043478,38.5454545 L31.3043478,33.6969697 C37.3554677,33.6969697 42.2608696,29.1384144 42.2608696,23.5151515 C42.2608696,17.8918886 37.3554677,13.3333333 31.3043478,13.3333333 L31.3043478,8.48484848 C40.2369533,8.48484848 47.4782609,15.2141444 47.4782609,23.5151515 C47.4782609,31.8161587 40.2369533,38.5454545 31.3043478,38.5454545 Z",
        "M31.3043478,28.3636364 C34.1858335,28.3636364 36.5217391,26.4099698 36.5217391,24 C36.5217391,21.5900302 34.1858335,19.6363636 31.3043478,19.6363636"
      ];
      break;

    default:
      break;
  }

  // Map the paths of the selected svg into a readable SVG path element
  const paths = pathArray &&
    pathArray.map((path, index) => {
      return (
        <path d={path} key={`${path.length}-${index}`} transform={transform} />
      );
    });

  const polyline = polylinePoints &&
    polylinePoints.map(path => {
      return <polyline points={path} key={path.length} />;
    });

  // Turn names into readable titles
  const iconTitle = `${name.replace(/-/g, " ")} icon`;

  // Return the mapped path elements into a <svg /> element
  return (
    <svg
      viewBox="0 0 48 48"
      id={name}
      className={name}
      width={size}
      height={size}
      {...props}
    >
      <title>{iconTitle}</title>
      {paths}
      {polyline}
    </svg>
  );
};

// Define Icon Prop Types
Icons.propTypes = {
  name: PropTypes.string.isRequired,
  className: PropTypes.string,
  size: PropTypes.number
};

Icons.defaultProps = {
  name: "",
  size: 48
};
